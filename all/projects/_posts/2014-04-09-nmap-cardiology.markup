---
layout: post
title: Nmap cardiology using nmap scripting to test the heartbleed bug
level: intermediate
skills: lua_basic
---

<p>NOTE: This post requires a very basic understanding of Lua, or the willingness to not cate about syntax and just follow along for the principles.</p>


<p>A few days ago the <a href="http://heartbleed.com/">Heartbleed bug</a> came out which allowed attackers to read the memory of systems using a vulnerable version of OpenSSL. <em>Reading the memory</em> will allow attackers to steal even the encryption keys which make <em>all</em> secure traffic <em>ever</em> monitored to and from one of these systems decryptable. But, that happened a whole two days ago (as of when I put fingers to keyboard on this piece). If you are reading this blog, you probobly know that. So, what I decided to do this morning is to build a script to identify, and notify, vulnerable systems.</p>

<p>I have wanted to use the <a href="http://nmap.org/">Nmap<a/> <a href="http://nmap.org/book/nse.html"> scripting engine</a> for quite some time now. Nmap is a (========EXPLAIN WHAT IS NMAP HERE======). I enjoy using Nmap, but I find the command line flags cumborsom. Nmap implemented a <a href="http://www.lua.org/">Lua</a> based scripting engine in 2007. (=========WHY ME, WHY LUA, WHY FUN=======).</p>

<p>To start I need to gather my tools. Nmap has a robust <a href="http://nmap.org/nsedoc/">script library</a> already, and I don't want to write what I don't have to. Heartbleed was orginally released on April 7th 2014.  It is 7:50am on April 9th and there is already a Heartbleed vulnerability scripted up and uploaded to the script library... I am as dissapointed as you are. But, since this was supposed to simply be a nmap scripting lesson, and open source is rooted in reuse, we are not going to re-implement this from scratch. Instead, we are going to use this script to make a vulnerability notifier.</p>

<p>The first thing we need to do is set up our script. This simply means that I write a description, author information, licsence, and assign this script to a set of categories. You can find details about this in the <a href="http://nmap.org/book/nse-script-format.html">script formatting documentation.</a>

<pre>
description = [[ Identifies servers who are vulnerable to heartbleed and then notifies the current owner of the ip address with an e-mail. ]]

author = "Seamus Tuohy <s2e@seamustuohy.com>"
license = "Same as Nmap--See http://nmap.org/book/man-legal.html"
categories = { "vuln", "safe", "discovery"}
</pre>

<p>I took the categories directly from the heartbleed script and added a <em>discovery</em> category because the <a href="http://nmap.org/book/nse-usage.html#nse-categories">documentation</a> uses that section to note scripts that are "querying public registies."  I am going to need to query public registries to find the contact info of server owners, so I also fit into this category.</p>

<p> Since we already have the heartbleed script, and we simply want to add e-mail the owner of an ip-address I am going to use an existing <a href=http://nmap.org/nsedoc/scripts/whois-ip.html">whois this ip</a> script to gather the e-mails from the ip addresses we scan. With these two scripts already in place we simply have to build the glue to place them together. </p>

For those who are dissapointed that this is starting to sound more and more like an excecise in becoming a <em>script kiddie,</em> I am sorry. But, that is what you get for having a robust community of developers working together. All the interesting problems are solved.